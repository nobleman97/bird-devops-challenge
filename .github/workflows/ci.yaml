name: 'Infra Pipeline'

env:
 TF_LOG: INFO
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

on:
  push:
    branches: [ main ]

jobs:
  terraform-plan:
    name: 'Terraform plan'
    runs-on: 'ubuntu-latest'

    defaults:
      run:
        shell: bash
        working-directory: "infrastructure/terraform"

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: 'Install Terraform'
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform validate
        id: validate
        run: terraform validate

      - name: Create Tfvars file with sensitive data
        run: echo "${{ secrets.EXTRA_TFVARS }}" > "extra.auto.tfvars"

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -input=false

  terraform-apply:
    needs: terraform-plan
    name: 'Terraform Apply'
    runs-on: 'ubuntu-latest'
    environment: 'demo'
    

    defaults:
      run:
        shell: bash
        working-directory: "infrastructure/terraform"

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: 'Install Terraform'
        uses: hashicorp/setup-terraform@v3
        
      - name: Create Tfvars file with sensitive data
        run: echo ${{ secrets.EXTRA_TFVARS }} > "extra.auto.tfvars"

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false